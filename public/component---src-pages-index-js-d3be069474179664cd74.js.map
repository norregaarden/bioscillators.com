{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["indexStyles","makeStyles","indexLayout","padding","theme","data","location","classes","title","className","variant","key","style","margin","to","link","activeClassName","size","color","textTransform","container","item","query"],"mappings":"4FAAA,8LAaMA,EAAcC,aAAW,kBAAY,CAC1CC,YAAa,CACZC,QAASC,kBAQI,sBAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAChBC,EAAUP,IAKhB,OACE,uBAAQQ,MAAR,yBAAuCF,SAAUA,GAAU,uBAAKG,UAAWF,EAAQL,aAClF,uBAAYQ,QAAQ,MADsC,oDAG1D,2BACEL,EAAA,6BAAkC,qBAClC,uBAAUM,IAAV,EAAsBC,MAAO,CAAEC,OAAQ,SACtC,uBAAMC,GAAIC,EAAV,GAAmBC,gBAAgB,UAClC,uBAAQC,KAAR,QAAqBC,MAArB,UAAqCR,QAAQ,YAAW,uBAAYA,QAAZ,KAAyBE,MAAO,CAAEO,cAAF,OAAyBhB,QAAS,SAAWY,EAHrG,WASpC,sBAb0D,MAe1D,uBAAMK,WAAS,GACd,uBAAMC,MAAI,GACT,2BAAG,gCADJ,wBAEC,4BACC,4BADD,uDAEC,4BAFD,4CAGC,4BAHD,mDAIC,4BAJD,wDAKC,4BALD,uDAMC,4BATH,8EAYC,uBAAMA,MAAI,GACT,+BAAI,gCAAJ,UADD,KAEC,4BAGC,4BAAI,gCAHL,kDAIC,4BAAI,gCAJL,oCAKC,4BAAI,gCALL,iEAMC,4BAAI,gCANL,8DAOC,4BAAI,gCAPL,oEAQC,4BAAI,gCARL,yDASC,4BAAI,gCATL,+DAUC,4BAAI,gCAxCV,uDAkDM,IAAMC,EAAN","file":"component---src-pages-index-js-d3be069474179664cd74.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n// import Img from 'gatsby-image'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\nimport Layout from 'src/components/layout'\nimport Link from 'src/components/link'\nimport Divider from 'src/components/divider'\nimport { Typography, Grid, Box } from '@material-ui/core'\n\nconst indexStyles = makeStyles((theme) => ({\n\tindexLayout: {\n\t\tpadding: theme.spacing(3)\n\t},\n\t// image: {\n\t// \tmargin: theme.spacing(3)\n\t// }\n}))\n\n// data means query (?)\nexport default ({data, location}) => {\n\tconst classes = indexStyles()\n\n\t// TO DO: width shouldn't be like this for every image\n\t// const width = parseInt(/max-width: (.*?)px/g.exec(data.file.childImageSharp.fluid.sizes)[1])\n\n\treturn (\n\t\t\t<Layout title=\"Biological Oscillators\" location={location}><Box className={classes.indexLayout}>\n\t\t\t\t<Typography variant=\"h4\">Three basic biological networks are implemented:</Typography>\n\n\t\t\t\t<List>\n\t\t\t\t\t{data.site.siteMetadata.links.map( (link, index) =>\n\t\t\t\t\t\t<ListItem key={index} style={{ margin: '16px' }}>\n\t\t\t\t\t\t\t<Link to={link[0]} activeClassName=\"active\">\n\t\t\t\t\t\t\t\t<Button size='large' color='primary' variant='outlined'><Typography variant=\"h3\" style={{ textTransform: 'none', padding: '12px' }}>{link[1]}</Typography></Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\n\t\t\t\t<Divider />\n\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<p><strong>Things you can try:</strong></p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Click on an edge or a node to change its properties</li>\n\t\t\t\t\t\t\t<li>Drag the orange dot to create a new edge</li>\n\t\t\t\t\t\t\t<li>Right-click the background to create a new node</li>\n\t\t\t\t\t\t\t<li>Consider how the equations correspond to the network</li>\n\t\t\t\t\t\t\t<li>Scroll down to see the system develop in time (RK4)</li>\n\t\t\t\t\t\t\t<li>Play with the parameters in the 'conditions' tab and see the plot change</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<p>(<strike>To do:</strike>)</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{/* <li><strike>Click on a node to change its properties including initial condition</strike></li>\n\t\t\t\t\t\t\t<li><strike>Right-click to create a new node</strike></li> */}\n\t\t\t\t\t\t\t<li><strike>Phase plots for both variables and parameters</strike></li>\n\t\t\t\t\t\t\t<li><strike>Considerably more dynamic plots</strike></li>\n\t\t\t\t\t\t\t<li><strike>Entrainment to time-dependent functions (light, temperature)</strike></li>\n\t\t\t\t\t\t\t<li><strike>Search for limit cycles, analytically and computationally</strike></li>\n\t\t\t\t\t\t\t<li><strike>Units in general and optimizing parameters to experimental data</strike></li>\n\t\t\t\t\t\t\t<li><strike>Stochastic simulation, compartmentalized and spatial</strike></li>\n\t\t\t\t\t\t\t<li><strike>Runge-Kutta adaptive time step; WebWorkers og WebAssembly.</strike></li>\n\t\t\t\t\t\t\t<li><strike>Save sessions, state, time series etc. SBML?</strike></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* <Img style={{ maxWidth: width }} fluid={data.file.childImageSharp.fluid} className={classes.image} /> */}\n\t\t\t</Box></Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\tlinks\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}